### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Application {
  applicableRegulations: [String!]!
  applicationDRRegionStored: String!
  applicationHostingEntity: String!
  applicationHostingManagement: String!
  applicationHostingType: String!
  applicationName: String!
  applicationOwner: String!
  applicationRegionStored: String!
  applicationType: String!
  businessId: String!
  comments: String!
  connectionType: String!
  dataRetentionReq: String!
  description: String!
  encryptedDataTransfer: Boolean!
  hasAge: Boolean!
  hasBillingHistory: Boolean!
  hasBiometricData: Boolean!
  hasBirthdate: Boolean!
  hasCivilJusticeInfo: Boolean!
  hasCriminalInfo: Boolean!
  hasDRHosting: Boolean!
  hasDriversLicenceNumber: Boolean!
  hasEmailAddress: Boolean!
  hasEthnicOrigin: Boolean!
  hasFinancialInfo: Boolean!
  hasGender: Boolean!
  hasHealthInfo: Boolean!
  hasHomeAddress: Boolean!
  hasHouseholdInfo: Boolean!
  hasIdNumbers: Boolean!
  hasLocation: Boolean!
  hasMaritalStatus: Boolean!
  hasMedicalInfo: Boolean!
  hasMinorInfo: Boolean!
  hasMobileNumber: Boolean!
  hasNameAndInitials: Boolean!
  hasNationality: Boolean!
  hasPhysicalCharacteristics: Boolean!
  hasReligiousPhilosophicalPoliticalBeliefs: Boolean!
  hasSexualBehaviour: Boolean!
  hasSocialMedia: Boolean!
  hasStudentInfo: Boolean!
  hasTelephoneNumber: Boolean!
  hasTradeUnionMembership: Boolean!
  hasUniqueDeviceId: Boolean!
  id: String!
  linkedApps: [String!]!
  modules: [String!]!
  technologyOwner: String!
}

input ApplicationWhereUniqueInput {
  id: String
}

type Business {
  applications(cursor: ApplicationWhereUniqueInput, skip: Int, take: Int): [Application!]!
  businessContactEmail: String!
  businessContactName: String!
  businessContactPhone: String!
  businessContactPosition: String!
  companyAddress: String!
  companyEmail: String!
  companyName: String!
  companyPhone: String!
  hrContactEmail: String!
  hrContactName: String!
  hrContactPhone: String!
  hrContactPosition: String!
  id: String!
  privacyLiaisonContactEmail: String!
  privacyLiaisonContactName: String!
  privacyLiaisonContactPhone: String!
  privacyLiaisonContactPosition: String!
  technicalContactEmail: String!
  technicalContactName: String!
  technicalContactPhone: String!
  technicalContactPosition: String!
}

input BusinessWhereUniqueInput {
  id: String
}

type ConsultancyFirm {
  businesses(cursor: BusinessWhereUniqueInput, skip: Int, take: Int): [Business!]!
  id: String!
  name: String!
  slug: String!
  users(cursor: UserWhereUniqueInput, skip: Int, take: Int): [User!]!
}

type Module {
  id: String!
  name: String!
}

type Mutation {
  addApplication(applicableRegulations: [String], applicationDRRegionStored: String!, applicationHostingEntity: String!, applicationHostingManagement: String!, applicationHostingType: String!, applicationName: String!, applicationOwner: String!, applicationRegionStored: String!, applicationType: String!, businessId: String!, comments: String!, connectionType: String!, dataRetentionReq: String!, description: String!, encryptedDataTransfer: Boolean!, hasAge: Boolean!, hasBillingHistory: Boolean!, hasBiometricData: Boolean!, hasBirthdate: Boolean!, hasCivilJusticeInfo: Boolean!, hasCriminalInfo: Boolean!, hasDRHosting: Boolean!, hasDriversLicenceNumber: Boolean!, hasEmailAddress: Boolean!, hasEthnicOrigin: Boolean!, hasFinancialInfo: Boolean!, hasGender: Boolean!, hasHealthInfo: Boolean!, hasHomeAddress: Boolean!, hasHouseholdInfo: Boolean!, hasIdNumbers: Boolean!, hasLocation: Boolean!, hasMaritalStatus: Boolean!, hasMedicalInfo: Boolean!, hasMinorInfo: Boolean!, hasMobileNumber: Boolean!, hasNameAndInitials: Boolean!, hasNationality: Boolean!, hasPhysicalCharacteristics: Boolean!, hasReligiousPhilosophicalPoliticalBeliefs: Boolean!, hasSexualBehaviour: Boolean!, hasSocialMedia: Boolean!, hasStudentInfo: Boolean!, hasTelephoneNumber: Boolean!, hasTradeUnionMembership: Boolean!, hasUniqueDeviceId: Boolean!, linkedApps: [String], modules: [String], technologyOwner: String!): Application
  addBusiness(businessContactEmail: String!, businessContactName: String!, businessContactPhone: String!, businessContactPosition: String!, companyAddress: String!, companyEmail: String!, companyName: String!, companyPhone: String!, hrContactEmail: String!, hrContactName: String!, hrContactPhone: String!, hrContactPosition: String!, privacyLiaisonContactEmail: String!, privacyLiaisonContactName: String!, privacyLiaisonContactPhone: String!, privacyLiaisonContactPosition: String!, technicalContactEmail: String!, technicalContactName: String!, technicalContactPhone: String!, technicalContactPosition: String!): Business
  createConsultancyFirm(name: String!, slug: String): ConsultancyFirm
  deleteApplication(id: String!): Application
  deleteBusiness(id: String!): Business
  inviteToConsultancyFirm(email: String!, projectId: String!): Boolean
  removeUserFromConsultancyFirm(consultancyFirmId: String!, userId: String!): ConsultancyFirm
  updateApplication(applicableRegulations: [String], applicationDRRegionStored: String!, applicationHostingEntity: String!, applicationHostingManagement: String!, applicationHostingType: String!, applicationName: String!, applicationOwner: String!, applicationRegionStored: String!, applicationType: String!, businessId: String!, comments: String!, connectionType: String!, dataRetentionReq: String!, description: String!, encryptedDataTransfer: Boolean!, hasAge: Boolean!, hasBillingHistory: Boolean!, hasBiometricData: Boolean!, hasBirthdate: Boolean!, hasCivilJusticeInfo: Boolean!, hasCriminalInfo: Boolean!, hasDRHosting: Boolean!, hasDriversLicenceNumber: Boolean!, hasEmailAddress: Boolean!, hasEthnicOrigin: Boolean!, hasFinancialInfo: Boolean!, hasGender: Boolean!, hasHealthInfo: Boolean!, hasHomeAddress: Boolean!, hasHouseholdInfo: Boolean!, hasIdNumbers: Boolean!, hasLocation: Boolean!, hasMaritalStatus: Boolean!, hasMedicalInfo: Boolean!, hasMinorInfo: Boolean!, hasMobileNumber: Boolean!, hasNameAndInitials: Boolean!, hasNationality: Boolean!, hasPhysicalCharacteristics: Boolean!, hasReligiousPhilosophicalPoliticalBeliefs: Boolean!, hasSexualBehaviour: Boolean!, hasSocialMedia: Boolean!, hasStudentInfo: Boolean!, hasTelephoneNumber: Boolean!, hasTradeUnionMembership: Boolean!, hasUniqueDeviceId: Boolean!, id: String!, linkedApps: [String], modules: [String], technologyOwner: String!): Application
  updateBusiness(businessContactEmail: String!, businessContactName: String!, businessContactPhone: String!, businessContactPosition: String!, companyAddress: String!, companyEmail: String!, companyName: String!, companyPhone: String!, hrContactEmail: String!, hrContactName: String!, hrContactPhone: String!, hrContactPosition: String!, id: String!, privacyLiaisonContactEmail: String!, privacyLiaisonContactName: String!, privacyLiaisonContactPhone: String!, privacyLiaisonContactPosition: String!, technicalContactEmail: String!, technicalContactName: String!, technicalContactPhone: String!, technicalContactPosition: String!): Business
  updateUser(name: String, userId: String!): User
}

type Query {
  application(id: String): Application
  applications(businessId: String!): [Application]
  business(id: String): Business
  consultancyFirm(id: String, slug: String): ConsultancyFirm
  currentUser: User
  linkedApps(id: String!): [Application]
}

type User {
  consultancyFirm: ConsultancyFirm!
  email: String!
  id: String!
  name: String!
}

input UserWhereUniqueInput {
  email: String
  id: String
}